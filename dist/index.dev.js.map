{"version":3,"sources":["index.js"],"names":["inquirer","require","mysql","connection","createConnection","host","port","user","password","database","connect","err","console","log","threadId","startScreen","prompt","type","choices","message","name","then","result","option","addDepartment","addRole","addEmployee","viewTable","updateEmployee","quit","answer","query","deptName","res","table","roleName","salaryTotal","deptID","eeFirstName","eeLastName","roleID","managerID","newRoleID","eeID","end"],"mappings":"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","sourcesContent":["//Dependencies\r\nconst inquirer = require(\"inquirer\");\r\nconst mysql = require(\"mysql\");\r\n\r\n\r\n// Create connection to database\r\nconst connection = mysql.createConnection({\r\n  host: \"localhost\",\r\n  port: 3306,\r\n  user: \"root\",\r\n  password: \"Morpheus718\",\r\n  database: \"employee_info_db\"\r\n});\r\n\r\n// Connect to database and call startScreen() to display options to user\r\nconnection.connect(function(err) {\r\n  if (err) throw err;\r\n  console.log(\"connected as id \" + connection.threadId);\r\n  startScreen();\r\n});\r\n\r\n// Displays options to user and calls corresponding function based on their selection\r\nfunction startScreen() {\r\n  inquirer\r\n    .prompt({\r\n      type: \"list\",\r\n      choices: [\r\n        \"Add department\",\r\n        \"Add role\",\r\n        \"Add employee\",\r\n        \"View departments\",\r\n        \"View roles\",\r\n        \"View employees\",\r\n        \"Update employee role\",\r\n        \"Quit\"\r\n      ],\r\n      message: \"What would you like to do?\",\r\n      name: \"option\"\r\n    })\r\n    .then(function(result) {\r\n      console.log(\"You entered: \" + result.option);\r\n\r\n      switch (result.option) {\r\n        case \"Add department\":\r\n          addDepartment();\r\n          break;\r\n        case \"Add role\":\r\n          addRole();\r\n          break;\r\n        case \"Add employee\":\r\n          addEmployee();\r\n          break;\r\n        case \"View departments\":\r\n          viewTable(\"department\");\r\n          break;\r\n        case \"View roles\":\r\n          viewTable(\"role\");\r\n          break;\r\n        case \"View employees\":\r\n          viewTable(\"employee\");\r\n          break;\r\n        case \"Update employee role\":\r\n          updateEmployee();\r\n          break;\r\n        default:\r\n          quit();\r\n      }\r\n    });\r\n}\r\n\r\n// Adds a department to the database\r\nfunction addDepartment() {\r\n  inquirer.prompt({\r\n      type: \"input\",\r\n      message: \"What is the name of the department?\",\r\n      name: \"deptName\"\r\n    })\r\n    .then(function(answer){\r\n      connection.query(\"INSERT INTO department (name) VALUES (?)\", [answer.deptName] , function(err, res) {\r\n        if (err) throw err;\r\n        console.table(res)\r\n        startScreen()\r\n      })\r\n    })\r\n}\r\n\r\n// Adds a role to the database\r\nfunction addRole() {\r\n  inquirer\r\n    .prompt([\r\n      {\r\n        type: \"input\",\r\n        message: \"What's the name of the role?\",\r\n        name: \"roleName\"\r\n      },\r\n      {\r\n        type: \"input\",\r\n        message: \"What is the salary for this role?\",\r\n        name: \"salaryTotal\"\r\n      },\r\n      {\r\n        type: \"input\",\r\n        message: \"What is the department id number?\",\r\n        name: \"deptID\"\r\n      }\r\n    ])\r\n    .then(function(answer) {\r\n      connection.query(\"INSERT INTO role (title, salary, department_id) VALUES (?, ?, ?)\", [answer.roleName, answer.salaryTotal, answer.deptID], function(err, res) {\r\n        if (err) throw err;\r\n        console.table(res);\r\n        startScreen();\r\n      });\r\n    });\r\n}\r\n\r\n// Adds an employee to the database\r\nfunction addEmployee() {\r\n  inquirer\r\n    .prompt([\r\n      {\r\n        type: \"input\",\r\n        message: \"What's the first name of the employee?\",\r\n        name: \"eeFirstName\"\r\n      },\r\n      {\r\n        type: \"input\",\r\n        message: \"What's the last name of the employee?\",\r\n        name: \"eeLastName\"\r\n      },\r\n      {\r\n        type: \"input\",\r\n        message: \"What is the employee's role id number?\",\r\n        name: \"roleID\"\r\n      },\r\n      {\r\n        type: \"input\",\r\n        message: \"What is the id number of the employee's manager?\",\r\n        name: \"managerID\"\r\n        }\r\n        ])\r\n        .then(function(answer) {\r\n        connection.query(\"INSERT INTO employee (first_name, last_name, role_id, manager_id) VALUES (?, ?, ?, ?)\", [answer.eeFirstName, answer.eeLastName, answer.roleID, answer.managerID], function(err, res) {\r\n        if (err) throw err;\r\n        console.table(res);\r\n        startScreen();\r\n        });\r\n        });\r\n        }\r\n        \r\n        // Displays table based on user selection\r\n        function viewTable(table) {\r\n        connection.query(\"SELECT * FROM \" + table, function(err, res) {\r\n        if (err) throw err;\r\n        console.table(res);\r\n        startScreen();\r\n        });\r\n        }\r\n        \r\n        // Updates an employee's role in the database\r\n        function updateEmployee() {\r\n        inquirer\r\n        .prompt([\r\n        {\r\n        type: \"input\",\r\n        message: \"What is the id number of the employee you want to update?\",\r\n        name: \"eeID\"\r\n        },\r\n        {\r\n        type: \"input\",\r\n        message: \"What is the id number of the new role?\",\r\n        name: \"newRoleID\"\r\n        }\r\n        ])\r\n        .then(function(answer) {\r\n        connection.query(\"UPDATE employee SET role_id = ? WHERE id = ?\", [answer.newRoleID, answer.eeID], function(err, res) {\r\n        if (err) throw err;\r\n        console.table(res);\r\n        startScreen();\r\n        });\r\n        });\r\n        }\r\n        \r\n        // Ends the database connection\r\n        function quit() {\r\n        console.log(\"Goodbye!\");\r\n        connection.end();\r\n        }"],"file":"index.dev.js"}
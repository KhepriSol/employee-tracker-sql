{"version":3,"sources":["index.js"],"names":["inquirer","require","mysql","db","dbConnection","createConnection","cTable","port","password","displayStartScreen","prompt","type","name","value","createDepartment","message","createRole","choices","addEmployee","viewDepartments","viewEmployees","updateEmployeeRole","handleOption","result","log","option","addDepartment","answer","exitProgram","err","res","addRole","then","connection","handleRoleInput","query","roleName","salaryTotal","deptID","console","table","handleEmployeeInput","eeFirstName","eeLastName","roleID","managerID","updateEmployee","handleUpdateEmployeeInput","updateRole","eeUpdate","username","connect","error","database","threadId"],"mappings":"aACA,IAAMA,SAAWC,QAAQ,YADzBC,MAAAD,QAAA,SACMD,OAAWC,QAAQ,iBAGnBE,GAAKF,QAAQ,KAEbG,aAAeF,MAAMG,iBAAiB,CAHtCC,OAAM,YAKRC,KAAM,KAJJJ,SAAKF,QAMPO,SAAU,aAJRJ,SAAAA,gBAYFK,SAAAA,qBAJFT,SAAAU,OAAA,CASIC,KAAM,OAFVC,KAASH,SACPT,QAASU,6BACPC,QAAM,CACF,CAAEC,KAAA,wBAFQC,MAAAC,kBAGdC,CAAAA,KAAS,kBAAAF,MAHKG,YAIdC,CAAAA,KACE,mBAAAJ,MAAAK,aAAEN,CAAIA,KAAE,mBAARC,MAAAM,iBAAiCN,CAAAA,KAAOC,aAAAA,MAAAA,WACxC,CAAAF,KAAA,iBAAAC,MAAAO,eAAER,CAAIA,KAAE,uBAARC,MAAAQ,oBAA2BR,CAAAA,KAAOG,OAAAA,MAAAA,gBAChCJ,KAAMU,cACNV,SAAIU,aAAEC,GAAoBV,QAAKW,IAAEL,oBAAAA,EAAAA,QAAnCI,EACAE,SAAA,SACAC,gBAAEd,SAAwBC,OAAOO,CACjCT,KAAA,QAAEC,QAAM,oCAAwBC,KAAOQ,aACrCT,KAAM,SAARe,GAAgBd,WAAOe,MARhB,2CAUHN,CAAAA,EAAAA,UACT,SAAAO,EAAAC,GAmBS,GAAID,EAAK,MAAMA,EAjBhBP,QAAAA,MAAaC,GACZC,yBAOJb,SAAMoB,UACNhB,SAASL,OAAA,CACTE,CAEDoB,KAAK,QACJC,KAAU,WAINlB,QAAS,+BAETN,CANJE,KAAA,QAPJC,KAAA,cAiBDG,QAAA,mCAED,CACEf,KAASU,QAEDE,KAAE,SACFG,QAAE,qCAINJ,KAAMuB,iBADR,SAKAA,gBAAAP,GACEhB,WAAMwB,MACNvB,mEACAG,CAAAA,EAASqB,SAAAT,EAAAU,YAAAV,EAAAW,QAGZN,SAAKE,EAAAA,GACP,GAAAL,EAAA,MAAAA,EAQKU,QAAQC,MAAMV,GANpBrB,uBAQK,SAPHS,cASDlB,SAIIU,OAAO,CAFZ,CACUC,KACLD,QAESK,QADR,wCAEEA,KAAS,eAGX,CACQJ,KAAA,QACNI,QAAS,uCACHH,KAAA,cAGF,CACJG,KAAS,QACHA,QAAA,uCAERH,KAAA,UAEEG,CACMJ,KAAA,QApBZI,QAuBQ0B,+BACT7B,KAAA,eAGCqB,KAAUQ,qBAMNhC,SAAAA,oBAAkBkB,GANtBM,WAAAE,MASD,wFAPG,CAACR,EAAOe,YAAaf,EAAOgB,WAAYhB,EAAOiB,OAAQjB,EAAOkB,WAUlE,SAASC,EAAAA,GACP9C,GACGU,EADH,MAEImB,EACMU,QAAEC,MADRV,GAEEf,uBAGF,SAMIgC,iBACT/C,SAbIU,OAAO,CAeZ,CACEuB,KAAWE,QAIHN,QAAWA,2CACfU,KAAQC,YALZ,CASD7B,KAAA,QAjBOI,QAAS,iCACTH,KAAM,gBAGToB,KAAKe,2BAGV,SAASA,0BAA0BpB,GACjCM,WAAWE,MACT,uDACA,CAACR,EAAOqB,WAAYrB,EAAOsB,UAC3B,SAASpB,EAAKC,GACZ,GAAID,EAAK,MAAMA,EACfU,QAAQC,MAAMV,GACdrB,uBAxJJyC,aAAUC,QAH8B,SAAAC,GAIxC5C,GAAAA,EAAU,MAAA4C,EACVC,QAAU7B,IAAA,mCAAApB,aAAAkD,UAGZlD","file":"index.min.js","sourcesContent":["//Dependencies found here\r\nconst inquirer = require(\"inquirer\");\r\nconst mysql = require(\"mysql\");\r\nconst cTable = require(\"console.table\");\r\nconst db = require(\".\");\r\n\r\nconst dbConnection = mysql.createConnection({\r\n    server: \"localhost\",\r\n    port: 3001,\r\n    username: \"admin\",\r\n    password: \"Yonkers24!\",\r\n    database: \"employee_db\"\r\n  });\r\n  \r\n  dbConnection.connect(function(error) {\r\n    if (error) throw error;\r\n    console.log(\"Connected to the database as ID \" + dbConnection.threadId);\r\n  \r\n    displayStartScreen();\r\n  });\r\n  \r\n  function displayStartScreen() {\r\n    inquirer.prompt({\r\n      type: \"list\",\r\n      name: \"option\",\r\n      message: \"What would you like to do?\",\r\n      choices: [\r\n        { name: \"Create new department\", value: createDepartment },\r\n        { name: \"Create new role\", value: createRole },\r\n        { name: \"Add new employee\", value: addEmployee },\r\n        { name: \"View departments\", value: viewDepartments },\r\n        { name: \"View roles\", value: viewRoles },\r\n        { name: \"View employees\", value: viewEmployees },\r\n        { name: \"Update employee role\", value: updateEmployeeRole },\r\n        { name: \"Exit\", value: exitProgram }\r\n      ]\r\n    }).then(handleOption);\r\n  }\r\n  \r\n  function handleOption(result) {\r\n    console.log(\"Selected option: \" + result.option);\r\n    result.option();\r\n  }\r\n  \r\n  function addDepartment() {\r\n    inquirer\r\n      .prompt({\r\n        type: \"input\",\r\n        message: \"Enter the name of the department:\",\r\n        name: \"deptName\"\r\n      })\r\n      .then(function(answer) {\r\n        connection.query(\r\n          \"INSERT INTO department (name) VALUES (?)\",\r\n          [answer.deptName],\r\n          function(err, res) {\r\n            if (err) throw err;\r\n            console.table(res);\r\n            displayStartScreen();\r\n          }\r\n        );\r\n      });\r\n  }\r\n  \r\n  function addRole() {\r\n    inquirer.prompt([\r\n      {\r\n        type: \"input\",\r\n        name: \"roleName\",\r\n        message: \"Enter the name of the role:\"\r\n      },\r\n      {\r\n        type: \"input\",\r\n        name: \"salaryTotal\",\r\n        message: \"Enter the salary for this role:\"\r\n      },\r\n      {\r\n        type: \"input\",\r\n        name: \"deptID\",\r\n        message: \"Enter the department ID number:\"\r\n      }\r\n    ])\r\n    .then(handleRoleInput);\r\n  }\r\n  \r\n  function handleRoleInput(answer) {\r\n    connection.query(\r\n      \"INSERT INTO role (title, salary, department_id) VALUES (?, ?, ?)\",\r\n      [answer.roleName, answer.salaryTotal, answer.deptID],\r\n      function(err, res) {\r\n        if (err) throw err;\r\n        console.table(res);\r\n        displayStartScreen();\r\n      }\r\n    );\r\n  }\r\n  \r\n  function addEmployee() {\r\n    inquirer\r\n      .prompt([\r\n        {\r\n          type: \"input\",\r\n          message: \"Enter the first name of the employee:\",\r\n          name: \"eeFirstName\"\r\n        },\r\n        {\r\n          type: \"input\",\r\n          message: \"Enter the last name of the employee:\",\r\n          name: \"eeLastName\"\r\n        },\r\n        {\r\n          type: \"input\",\r\n          message: \"Enter the employee's role ID number:\",\r\n          name: \"roleID\"\r\n        },\r\n        {\r\n          type: \"input\",\r\n          message: \"Enter the manager ID number:\",\r\n          name: \"managerID\"\r\n        }\r\n      ])\r\n      .then(handleEmployeeInput);\r\n  }\r\n  \r\n  function handleEmployeeInput(answer) {\r\n    connection.query(\r\n      \"INSERT INTO employee (first_name, last_name, role_id, manager_id) VALUES (?, ?, ?, ?)\",\r\n      [answer.eeFirstName, answer.eeLastName, answer.roleID, answer.managerID],\r\n      function(err, res) {\r\n        if (err) throw err;\r\n        console.table(res);\r\n        displayStartScreen();\r\n      }\r\n    );\r\n  }\r\n  \r\n\r\n  function updateEmployee() {\r\n    inquirer\r\n      .prompt([\r\n        {\r\n          type: \"input\",\r\n          message: \"Which employee would you like to update?\",\r\n          name: \"eeUpdate\"\r\n        },\r\n        {\r\n          type: \"input\",\r\n          message: \"What do you want to update to?\",\r\n          name: \"updateRole\"\r\n        }\r\n      ])\r\n      .then(handleUpdateEmployeeInput);\r\n  }\r\n  \r\n  function handleUpdateEmployeeInput(answer) {\r\n    connection.query(\r\n      \"UPDATE employee SET role_id = ? WHERE first_name = ?\",\r\n      [answer.updateRole, answer.eeUpdate],\r\n      function(err, res) {\r\n        if (err) throw err;\r\n        console.table(res);\r\n        displayStartScreen();\r\n      }\r\n    );\r\n  }\r\n  "]}